데이터베이스(database)
 : 다수의 사용자에 의해 공유되어 사용될 목적으로 통합하여 관리되는 데이터의 집합

관계형 데이터베이스(Relational)
 : DBMS의 종류 중 하나이며 DBMS 중 가장 많은 부분을 차지함

관계형 데이터베이스의 구조
 - 테이블(Table) : 
		> 데이터를 저장하는 장소입니다.
	- 컬럼(Column) : 
    	> 테이블에서 열을 의미합니다.
	    > 컬럼명과 컬럼값으로 구성됩니다.
		    * 컬럼명 :
			    > RDB에서 각각을 구분할 수 있는 논리적인 개념입니다.
		    * 컬럼값 :
			    > 각 데이터의 값입니다.
     - 레코드(Recode) : 
		> 테이블에서 행을 의미합니다.

쿼리 문법의 종류
 - DML(data Manipulation Language) : 데이터 조작 언어
  : 검색(select), 등록(insert), 삭제(delete), 갱신(update)
 - DDL(data Definition Language) : 데이터 정의 언어
  : 관계형 데이터베이스의 구조를 정의
 - DCL(data control Language) : 데이터 제어 언어
  : 데이터에 대한 액세스를 제어
 - TCL(Transaction control Language) : 트랜잭션 제어 언어
  : 논리적인 작업의 단위를 묶어 dml에 의해 조자고딘 결과를 트랙잭션 별로 제어
 
트랜잭션(Transaction)
 : 데이터베이스의 상태를 변화시키기 위해 수행하는 작업 단위(commit, rollback을 하기 전까지의 과정)

트랜잭션의 성질 & 상태
 - 원자성 : 모든 명령을 완벽히 수행, 전부가 완벽히 수행되지 않고 오류가 나면 모든 명령을 취소함
 - 일관성 : 명령 실행을 성공하면 일관성 있는 데이터베이스 상태로 변환 > 수행 전,후가 같아야 함
 - 독립성 : 둘 이상의 트랜잭션이 실행되는 경우 먼저 실행된 것부터 순차적 실행
 - 영속성 : 완료된 트랜잭션의 결과는 영구적으로 데이터베이스에 반영이 되어야 함

active(활동) - failed(실패) - aborted(철회)
             - partially commited(부분 완료) - commited(완료)

DML 
 1. Select 
 - 기본 구조
  select (조회할 컬럼명 | *) from (테이블명)
  where (쿼리 조건);

 * : 테이블의 모든 컬럼을 조회함

 - 특정 조건으로 조회
  1. where 
   - 비교 연산자를 통해 조회
    : =, <, >, <=, >=

    select * from employees where emp_no = 10001;
    select * from employees where emp_no < 10005;
    select * from employees where emp_no > 10010; 
    select * from employees where emp_no <= 10005;
    select * from employees where emp_no => 10010; 

  2. AND, OR
   - 여러 조건을 설정하여 조회

   select * from employees where emp_no <= 10001 and emp_no <= 10005;
   select * from employees where emp_no = 10001 or emp_no = 10005;

  3. BETWEEN A and B
   - 해당 범위 내의 데이터 조회 

   select * from employeees where emp_no between 10001 and 10005;

  4. in
   - 복수의 특정 값들에 일치하는 데이터 조회

   select * from employees where emp_no in(10001, 10005);

  5. Like
   - 문자열의 내용 조회 / 부분일치
   : %n n이 마지막으로 오는 값 조회
   : n% n이 첫 글자로 오는 값 조회
   - 언더바(_)의 숫자 만큼 앞/뒤에 값이 있는 값 조회
   : _n n으로 끝나는 값 
   : n_ n으로 시작하는 값 

  6. order by 
   - 정렬 조회
   : asc 오름차순(기본값)
   : desc 내림차순

  7. 집계함수 
   * ()안에 컬럼명을 넣어 사용 
   - avg() : 평균
   - max() : 최대값
   - min() : 최소값
   - count() : 개수
   - sum() : 합계 

  8. group by
   - 그룹으로 묶어서 조회

   group by 컬럼명 having 집계함수 조건  
   select emp_no, salary from salaries where group by emp_no;
   SELECT emp_no, avg(salary)
		FROM salaries
		group BY emp_no
		HAVING AVG(salary) BETWEEN 30000 AND 50000;

   9. DISTINCT / LIMIT
    - DISTINCT : 중복값 없이 조회
     select DISTINCT dept_no from dept_manager;

    - Limit : 출력 개수 제한
     select * from employees limit 5;

   10. 서브쿼리 
    - 쿼리 안의 또 다른 쿼리가 있는 형태 
     in : 서브쿼리의 결과에 존재하는 임의의 값과 동일한 조건
     any : 서브쿼리의 결과에 존재하는 어느 하나의 값이라도 만족하는 조건(부분일치)
     all : 서브쿼리의 결과에 존재하는 모든 값을 만족하는 조건(완전일치)

     select * from employees 
     where emp_no (
        select emp_no from employees 
        where emp_no = 10001;
     )

    11. concat
     - 문자열을 합치는 함수

     select concat(컬럼명1, '', 컬럼명2) from 테이블명;

     


